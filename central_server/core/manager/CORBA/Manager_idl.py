# Python stubs generated by omniidl from Manager.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


#
# Start of module "CORBAManagerRef"
#
__name__ = "CORBAManagerRef"
_0_CORBAManagerRef = omniORB.openModule("CORBAManagerRef", r"Manager.idl")
_0_CORBAManagerRef__POA = omniORB.openModule("CORBAManagerRef__POA", r"Manager.idl")


# exception notFoundRef
_0_CORBAManagerRef.notFoundRef = omniORB.newEmptyClass()
class notFoundRef (CORBA.UserException):
    _NP_RepositoryId = "IDL:CORBAManagerRef/notFoundRef:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_CORBAManagerRef.notFoundRef = notFoundRef
_0_CORBAManagerRef._d_notFoundRef  = (omniORB.tcInternal.tv_except, notFoundRef, notFoundRef._NP_RepositoryId, "notFoundRef")
_0_CORBAManagerRef._tc_notFoundRef = omniORB.tcInternal.createTypeCode(_0_CORBAManagerRef._d_notFoundRef)
omniORB.registerType(notFoundRef._NP_RepositoryId, _0_CORBAManagerRef._d_notFoundRef, _0_CORBAManagerRef._tc_notFoundRef)
del notFoundRef

# exception notFoundClass
_0_CORBAManagerRef.notFoundClass = omniORB.newEmptyClass()
class notFoundClass (CORBA.UserException):
    _NP_RepositoryId = "IDL:CORBAManagerRef/notFoundClass:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_CORBAManagerRef.notFoundClass = notFoundClass
_0_CORBAManagerRef._d_notFoundClass  = (omniORB.tcInternal.tv_except, notFoundClass, notFoundClass._NP_RepositoryId, "notFoundClass")
_0_CORBAManagerRef._tc_notFoundClass = omniORB.tcInternal.createTypeCode(_0_CORBAManagerRef._d_notFoundClass)
omniORB.registerType(notFoundClass._NP_RepositoryId, _0_CORBAManagerRef._d_notFoundClass, _0_CORBAManagerRef._tc_notFoundClass)
del notFoundClass

# interface Manager
_0_CORBAManagerRef._d_Manager = (omniORB.tcInternal.tv_objref, "IDL:CORBAManagerRef/Manager:1.0", "Manager")
omniORB.typeMapping["IDL:CORBAManagerRef/Manager:1.0"] = _0_CORBAManagerRef._d_Manager
_0_CORBAManagerRef.Manager = omniORB.newEmptyClass()
class Manager :
    _NP_RepositoryId = _0_CORBAManagerRef._d_Manager[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_CORBAManagerRef.Manager = Manager
_0_CORBAManagerRef._tc_Manager = omniORB.tcInternal.createTypeCode(_0_CORBAManagerRef._d_Manager)
omniORB.registerType(Manager._NP_RepositoryId, _0_CORBAManagerRef._d_Manager, _0_CORBAManagerRef._tc_Manager)

# Manager operations and attributes
Manager._d_addRef = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0), omniORB.tcInternal.tv_boolean), (omniORB.tcInternal.tv_short, ), None)
Manager._d_findRefByName = (((omniORB.tcInternal.tv_string,0), ), ((omniORB.tcInternal.tv_string,0), ), {_0_CORBAManagerRef.notFoundRef._NP_RepositoryId: _0_CORBAManagerRef._d_notFoundRef})
Manager._d_findRefsDefs = (((omniORB.tcInternal.tv_string,0), ), ((omniORB.tcInternal.tv_string,0), ), {_0_CORBAManagerRef.notFoundRef._NP_RepositoryId: _0_CORBAManagerRef._d_notFoundRef})
Manager._d_addObjToServer = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (omniORB.tcInternal.tv_short, ), {_0_CORBAManagerRef.notFoundClass._NP_RepositoryId: _0_CORBAManagerRef._d_notFoundClass})
Manager._d_shutdown = ((), (), None)

# Manager object reference
class _objref_Manager (CORBA.Object):
    _NP_RepositoryId = Manager._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def addRef(self, *args):
        return self._obj.invoke("addRef", _0_CORBAManagerRef.Manager._d_addRef, args)

    def findRefByName(self, *args):
        return self._obj.invoke("findRefByName", _0_CORBAManagerRef.Manager._d_findRefByName, args)

    def findRefsDefs(self, *args):
        return self._obj.invoke("findRefsDefs", _0_CORBAManagerRef.Manager._d_findRefsDefs, args)

    def addObjToServer(self, *args):
        return self._obj.invoke("addObjToServer", _0_CORBAManagerRef.Manager._d_addObjToServer, args)

    def shutdown(self, *args):
        return self._obj.invoke("shutdown", _0_CORBAManagerRef.Manager._d_shutdown, args)

omniORB.registerObjref(Manager._NP_RepositoryId, _objref_Manager)
_0_CORBAManagerRef._objref_Manager = _objref_Manager
del Manager, _objref_Manager

# Manager skeleton
__name__ = "CORBAManagerRef__POA"
class Manager (PortableServer.Servant):
    _NP_RepositoryId = _0_CORBAManagerRef.Manager._NP_RepositoryId


    _omni_op_d = {"addRef": _0_CORBAManagerRef.Manager._d_addRef, "findRefByName": _0_CORBAManagerRef.Manager._d_findRefByName, "findRefsDefs": _0_CORBAManagerRef.Manager._d_findRefsDefs, "addObjToServer": _0_CORBAManagerRef.Manager._d_addObjToServer, "shutdown": _0_CORBAManagerRef.Manager._d_shutdown}

Manager._omni_skeleton = Manager
_0_CORBAManagerRef__POA.Manager = Manager
omniORB.registerSkeleton(Manager._NP_RepositoryId, Manager)
del Manager
__name__ = "CORBAManagerRef"

#
# End of module "CORBAManagerRef"
#
__name__ = "Manager_idl"

_exported_modules = ( "CORBAManagerRef", )

# The end.
